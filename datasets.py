'''–≤ –º–æ–¥—É–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Ç—Å—è 6 –¥–∞—Ç–∞—Å–µ—Ç–æ–≤ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ —Å—Ä–µ–¥—Å—Ç–≤–∞–º–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ sklearn (scikit)

scikit_datasets -- —Ç—å—é–ø–ª –∏–∑ —ç—Ç–∏—Ö 6-—Ç–∏ –¥–∞—Ç–∞—Å–µ—Ç–æ–≤'''

from sklearn import datasets
import numpy as np

n_samples = 800  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—á–µ–∫ –≤ –¥–∞—Ç–∞—Å–µ—Ç–µ
seed = 30  # –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Ä–∞–Ω–¥–æ–º–∏–∑–∞—Ü–∏–∏ (—á—Ç–æ–±—ã –±—ã–ª–æ –ø–æ—Å—Ç–æ—è–Ω–æ—Å—Ç–≤–æ –≤ –ù–£)

# –≤—Å–µ –æ–Ω–∏ üëá (–∫—Ä–æ–º–µ no_structure)Ô∏è –∏–º–µ—é—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É ( [ [–∫–æ–æ—Ä–¥,–∏–Ω–∞—Ç—ã],[–∫–∞–∂,–¥–æ–π],..,[—Ç–æ—á,–∫–∏] ], [–º–∞—Å—Å–∏–≤_—ç—Ç–∞–ª–æ–Ω–Ω–æ–≥–æ_—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è] )
# no_structure       –∏–º–µ–µ—Ç       —Å—Ç—Ä—É–∫—Ç—É—Ä—É        ( [ [–∫–æ–æ—Ä–¥,–∏–Ω–∞—Ç—ã],[–∫–∞–∂,–¥–æ–π],..,[—Ç–æ—á,–∫–∏] ], None )
# (!) –≤ –Ω–µ–π –∫–∞–∂–¥—ã–π –º–∞—Å—Å–∏–≤ —ç—Ç–æ –Ω—É–º–ø–∞–µ–≤—Å–∫–∏–π –º–∞—Å—Å–∏–≤

# 1 noisy_circles
noisy_circles = datasets.make_circles(
    n_samples=n_samples, factor=0.5, noise=0.05, random_state=seed
)

# 2 noisy_moons
noisy_moons = datasets.make_moons(n_samples=n_samples, noise=0.05, random_state=seed)

# 3 blobs
blobs = datasets.make_blobs(n_samples=n_samples, random_state=seed)

# 4 no_structure
rng = np.random.RandomState(seed)
no_structure = rng.rand(n_samples, 2), None

# 5 aniso
random_state = 170
X, y = datasets.make_blobs(n_samples=n_samples, random_state=random_state)
transformation = np.array([[0.6, -0.6], [-0.4, 0.8]])
X_aniso = np.dot(X, transformation)
aniso = (X_aniso, y)

# 6 varied
varied = datasets.make_blobs(
    n_samples=n_samples, cluster_std=[1.0, 2.5, 0.5], random_state=random_state
)

scikit_datasets = (noisy_circles, noisy_moons, blobs, no_structure, aniso, varied)

